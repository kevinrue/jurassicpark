## Read more about GitHub actions the features of this GitHub Actions workflow
## at https://lcolladotor.github.io/biocthis/articles/biocthis.html#use_bioc_github_action
##
## For more details, check the biocthis developer notes vignette at
## https://lcolladotor.github.io/biocthis/articles/biocthis_dev_notes.html
##
## You can add this workflow to other packages using:
## > biocthis::use_bioc_github_action()
##
## Using GitHub Actions exposes you to many details about how R packages are
## compiled and installed in several operating system.s
### If you need help, please follow the steps listed at
## https://github.com/r-lib/actions#where-to-find-help
##
## If you found an issue specific to biocthis's GHA workflow, please report it
## with the information that will make it easier for others to help you.
## Thank you!

## Acronyms:
## * GHA: GitHub Action
## * OS: operating system

on:
  push:
  pull_request:

name: create-test-upload

## These environment variables control whether to run GHA code later on that is
## specific to testthat, covr, and pkgdown.
##
## If you need to clear the cache of packages, update the number inside
## cache-version as discussed at https://github.com/r-lib/actions/issues/86.
## Note that you can always run a GHA test without the cache by using the word
## "/nocache" in the commit message.
env:
  has_testthat: 'true'
  run_covr: 'true'
  run_pkgdown: 'true'
  has_RUnit: 'false'
  cache-version: 'cache-v1'
  run_docker: 'true'

jobs:
  build-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    container: ${{ matrix.config.cont }}
    ## Environment variables unique to this job.

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, r: 'devel', bioc: '3.20', cont: "bioconductor/bioconductor_docker:devel", rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest" }
          - { os: macOS-latest, r: 'devel', bioc: '3.20'}
          - { os: windows-latest, r: 'devel', bioc: '3.20'}
          ## Check https://github.com/r-lib/actions/tree/master/examples
          ## for examples using the http-user-agent
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      NOT_CRAN: true
      TZ: UTC
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - name: Set up micromamba (Ubuntu)
        if: runner.os == 'Linux'
        uses: mamba-org/setup-micromamba@v1
        with:
          init-shell: bash

      - name: Set up micromamba (macOS)
        if: runner.os == 'macOS'
        uses: mamba-org/setup-micromamba@v1
        with:
          init-shell: bash

      - name: Set up micromamba (Windows)
        if: runner.os == 'Windows'
        uses: mamba-org/setup-micromamba@v1
        with:
          init-shell: powershell

      - name: Test micromamba (Unix)
        if: runner.os != 'Windows'
        run: |
          micromamba

      - name: Test micromamba (Windows)
        if: runner.os == 'Windows'
        run: |
          micromamba
        shell: pwsh {0}

      - name: Install micromamba environment (Unix)
        if: runner.os == 'Linux'
        run: |
          micromamba env create -n scvelo -c anaconda -c conda-forge -c bioconda scvelo==0.3.2 scipy==1.13.1

      - name: Install micromamba environment (macOS)
        if: runner.os == 'macOS'
        run: |
          micromamba env create -n scvelo -c conda-forge -c bioconda scvelo==0.3.2 scipy==1.13.1 loky==3.4.1

      - name: Install micromamba environment (Windows)
        if: runner.os == 'Windows'
        run: |
          micromamba env create -n scvelo -c bioconda -c conda-forge scvelo==0.2.5 matplotlib==3.6.3 pandas==1.5.2 numpy==1.21.1
        shell: pwsh {0}

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Test scvelo tutorial (Unix; scvelo == 0.3.2)
        if: runner.os != 'Windows'
        run: |
          micromamba activate scvelo
          python tests/scvelo/0.3.2.py
        shell: bash -el {0}

      - name: Test scvelo dynamical mode (Unix; scvelo == 0.3.2)
        if: runner.os != 'Windows'
        run: |
          micromamba activate scvelo
          python tests/scvelo/0.3.2-dynamical.py
        shell: bash -el {0}

      - name: Test scvelo tutorial (Windows; scvelo == 0.2.5)
        if: runner.os == 'Windows'
        run: |
          micromamba activate scvelo
          python tests/scvelo/0.2.5.py
        shell: pwsh {0}

      - name: Export environment (Ubuntu)
        if: runner.os != 'Windows'
        run: |
          micromamba env export -n scvelo > ~/scvelo.yaml

      - name: Export environment (Windows)
        if: runner.os == 'Windows'
        run: |
          micromamba env export -n scvelo > ~/scvelo.yaml
        shell: pwsh {0}

      - name: Display environment (Ubuntu)
        if: runner.os != 'Windows'
        run: |
          cat ~/scvelo.yaml

      - name: Display environment (Windows)
        if: runner.os == 'Windows'
        run: |
          type ~/scvelo.yaml
        shell: pwsh {0}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.os }}.yaml
          path: ~/scvelo.yaml
